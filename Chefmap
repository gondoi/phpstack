--- # mysql component definition
id: mysql
is: database
provides:
- database: mysql
requires:
- host: linux
options:
  "server_root_password":
    type: password
    default: =generate_password(min_length=12, required_chars=["0123456789", "abcdefghijklmnopqrstuvwxyz", "ABCDEFGHIJKLMNOPQRSTUVWXYZ"])
    required: true
  "username":
    required: true
    default: root
  "password":
    type: password
    default: =generate_password(min_length=12, required_chars=["0123456789", "abcdefghijklmnopqrstuvwxyz", "ABCDEFGHIJKLMNOPQRSTUVWXYZ"])
    required: true
# Here are the provider settings and maps for this component
run-list:
  recipes:
  - platformstack::default
  - rackops_rolebook::default
  - phpstack::mysql_master
maps:
- value: {{ setting('server_root_password') }}
  targets:
  - attributes://mysql/server_root_password
  - outputs://instance:{{resource.index}}/instance/interfaces/mysql/root_password
- source: requirements://host:linux/private_ip  # database is defined in component
  targets:
  - encrypted-databags://{{deployment.id}}/{{app_id}}/mysql/host
  - outputs://instance:{{resource.index}}/instance/interfaces/mysql/host
output:
  'instance:{{resource.index}}':
    instance:
      interfaces:
        mysql:
          database_name: {{setting('database_name')}}
          password: {{setting('password')}}
          username: {{setting('username')}}
          # note host is written as output of a map

--- # mongodb component definition
id: mongodb
is: database
provides:
- database: mongodb
requires:
- host: linux
options:
  port:
    label: "Listening port"
    type: integer
run-list:
  recipes:
  - platformstack::default
  - rackops_rolebook::default
  - phpstack::mongodb_standalone
maps:
-value: {{ settings('port') }}
  targets:
  - attributes://mongodb/config/port

--- # postgres component definition
id: postgres
is: database
provides:
- database: postgres
requires:
- host: linux
run-list:
  recipes:
  - platformstack::default
  - rackops_rolebook::default
  - phpstack::postgresql_master

--- # varnish component definition
id: varnish
is: cache
provides:
- cache: varnish
requires:
- host: linux
run-list:
  recipes:
  - platformstack::default
  - rackops_rolebook::default
  - phpstack::varnish

--- # memcache component definition
id: memcache
is: cache
provides:
- cache: memcache
requires:
- host: linux
options:
  port:
    label: "Listening port"
    type: integer
  monitoring:
    label: "Enable monitoring"
    type: boolean
    default: false
run-list:
  recipes:
  - platformstack::default
  - rackops_rolebook::default
  - phpstack::memcache
maps:
-value: {{ settings('port') }}
  targets:
  - attributes://memcached/port
-value: {{ setting('monitoring') }}
  targets:
  - attributes://platformstack/cloud_monitoring/plugins/memcached/disable

--- # redis component definition
id: redis
is: cache
provides:
- cache: redis
requires:
- host: linux
options:
  port:
    label: "Listening port"
    type: integer
run-list:
  recipes:
  - platformstack::default
  - rackops_rolebook::default
  - phpstack::redis_single
maps:
- value: {{ settings('port') }}
  targets:
  - attributes://redis-multi/bind_port

--- # apache component definition
id: apache
is: web
provides:
- web: apache
supports:
- cache:varnish
requires:
- host: linux
options:
  port:
    label: "Listening port"
    type: integer
    default: 80
  server_name:
    label: "Site's domain name"
    type: string
    example: example.com
  server_alias:
    label: "Additional domain names to respond on"
    type: array
    example:
    - www.example.com
    - blog.example.com
run-list:
  recipes:
  - platformstack::default
  - rackops_rolebook::default
  - phpstack::apache
maps:
- value: {{ settings(server_alias) }}
  targets:
  - attributes://phpstack/apache/sites/{{ settings('server_name') }}/{{ settings('port') }}/server_alias

--- # nginx component definition
id: nginx
is: web
provides:
- web: nginx
requires:
- host: linux
run-list:
  recipes:
  - platformstack::default
  - rackops_rolebook::default
  - phpstack::nginx

--- # new-relic component definition
id: new-relic
is: monitoring
provides:
- monitoring: new-relic
requires:
- host: linux
options:
  license:
    label: "New Relic license key"
    type: string
run-list:
  recipes:
  - platformstack::default
  - rackops_rolebook::default
  - phpstack::newrelic
maps:
- value: {{ settings('license') }}
  targets:
  - attributes://newrelic/license

--- # gluster component definition
id: gluster
is: storage
provides:
- storage: gluster
requires:
- host: linux
run-list:
  recipes:
  - platformstack::default
  - rackops_rolebook::default
  - phpstack::gluster

---
id: app
name: app
is: application

requires:
- host: linux
provides:
- application: http
supports:
- database: mysql
- database: mongodb
- database: postgres
- cache: varnish
- cache: memcache
- cache: redis
- web: apache
- web: nginx
- monitoring: new-relic
- storage: gluster
options:
  "demo":
    label: "Enable Demo"
    type: boolean
  "packages":
    label: "PHP Packages"
    type: string
run-list:
  recipes:
  - platformstack::default
  - rackops_rolebook::default
  - phpstack::apache
  - phpstack::mysql_master
maps:
- value: {{ setting('demo') }}
  targets:
  - attributes://phpstack/demo/enabled
- value: {{ deployment.id }}
  targets:
  - attributes://phpstack/databag_name
- value: {{ setting('packages') }}
  targets:
  - attributes://php/packages
